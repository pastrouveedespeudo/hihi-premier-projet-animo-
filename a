import cv2
from PIL import Image, ImageDraw, ImageChops
from matplotlib import pyplot as plt
import numpy as np


class cam_cadre:
    pass


class image:

    def noir_blanc(self, image):
        self.image = image

        img = Image.open(self.image).convert("LA")
        img = img.resize((100,100))
        img.save("noir_blanc.png")
        
        return "noir_blanc.png"


    def ouverture(self, image):
        self.image = image

        img = cv2.imread(self.image)
        imgray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
        ret,thresh = cv2.threshold(imgray,127,255,0)
        im2, contours, hierarchy = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)

        gray = cv2.bilateralFilter(im2, 11, 17, 17)
        edged = cv2.Canny(gray, 30, 200)
        
        cv2.imwrite("edged.jpg", edged)

        return "edged.jpg"



    def barre_du_bas_un(self, image):
        self.image = image
       

        img = cv2.imread(self.image)

        y = 0
        x = 0
        w = img.shape[0]
        h = int(round(img.shape[1] / 100*30))

        crop_img = img[y:y+h, x:x+w]
        
        cv2.imshow("queue.jpg", crop_img)
        cv2.imwrite("edged.jpg", crop_img)



    def crop_image_couleur(self):
        self.image = image
        
        img = cv2.imread("queue pts interro.jpg")

        y = 0
        x = 0
        w = img.shape[0]
        h = int(round(img.shape[1] / 100*30))

        crop_img = img[y:y+h, x:x+w]
        
        cv2.imshow("queue.jpg", crop_img)
        cv2.imwrite("crop_couleur.jpg", crop_img)



    def matches_couleur(self):
        self.image = image
        
        img1 = cv2.imread("crop_couleur.jpg.")
        img2 = cv2.imread("queue pts interro.jpg",0)

        
        orb = cv2.ORB_create()
        
        kp1, des1 = orb.detectAndCompute(img1,None)
        kp2, des2 = orb.detectAndCompute(img2,None)
    
        bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
       
        matches = bf.match(des1,des2)
     
        matches = sorted(matches, key = lambda x:x.distance)
     
        img3 = cv2.drawMatches(img1,kp1,img2,kp2,matches[:500],10, flags=2)
        plt.imshow(img3),plt.show()
     


    def pts_queue(self):
        self.image = image

        img1 = cv2.imread("queue.",0)
        img2 = cv2.imread("noir_blanc.png",0)


        #chercher dans l'image si y'a la pr√©sence de l'aisselle du ?
        #et totues les tailles
















if __name__ == "__main__":


    notre_image = "queue pts interro.jpg"

    image = image()
    image_gris = image.noir_blanc(notre_image)
    edge = image.ouverture(image_gris)
    queue = image.barre_du_bas_un(edge)
    image.pts_queue()


    image.crop_image_couleur()
    image.matches_couleur()

















